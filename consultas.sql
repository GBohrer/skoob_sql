-- VIEW:

-- O CATALAGO DE PUBLICACOES COM INFORMAÇÕES ÚTEIS AO DBA:
CREATE VIEW CATALOGO_PUB AS
SELECT
    L.CODLIVRO,
	L.TITULO,
	A.CODAUTOR,
	A.NOME AS "NOME_AUTOR",
	E.CODEDITORA,
	E.NOME AS "NOME_EDITORA"

FROM LIVROS L
    JOIN PUBLICACOES1 P1 ON L.CODLIVRO = P1.LIVROP
    JOIN AUTORES A       ON P1.AUTORP = A.CODAUTOR
    JOIN PUBLICACOES2 P2 ON L.CODLIVRO = P2.LIVROP
    JOIN EDITORAS E      ON P2.EDITORAP = E.CODEDITORA

ORDER BY L.CODLIVRO
	



-- CONSULTAS:

-- 1) OS USUARIOS QUE NÃO LERAM (FINALIZARAM) LIVROS DE AVENTURA EM SUAS ESTANTES
--    E POSSUEM PAGINOMETRO MAIOR OU IGUAL A 1500.
--	  MOSTRAR O NOME,CIDADE E PAGINOMETRO DOS USUARIOS.
--    ORDENAR PELOS SEUS PAGINOMETROS DE MODO DECRESCENTE:

SELECT DISTINCT
	U.NOME AS "USUARIOS",
    U.CIDADE,
    U.PAGINOMETRO
	
FROM 
	USUARIOS U
	JOIN ESTANTES E 	 ON E.CODUSUARIO = U.CODUSUARIO
    JOIN LIVROS L 		 ON L.CODLIVRO = E.CODLIVRO
	JOIN GENEROSLIVRO GL ON L.CODLIVRO = GL.CODLIVRO
	JOIN GENEROS GA		 ON GL.CODGENERO = GA.CODGENERO

WHERE
	U.PAGINOMETRO >= 1500 	   AND
	E.STATUS_LEITURA <> 'LIDO' AND
    GA.CATEGORIA = 'AVENTURA'
				
ORDER BY U.PAGINOMETRO DESC;
	  
	  

-- 2) QUANTOS MEMBROS EXISTEM EM CADA GRUPO ASSÍDUO?
--	  UM GRUPO ASSÍDUO É ONDE A MÉDIA DOS PAGINOMETROS DE SEUS MEMBROS É MAIOR QUE 1000.
--	  AGRUPAR PELOS GRUPOS, MOSTRANDO O NOME DO GRUPO, SEU TOTAL DE MEMBROS E A SOMA DOS PAGINOMETROS DOS MEMBROS DO GRUPO.

SELECT

	GR.NOME AS "NOME DO GRUPO",
	COUNT(*) AS "TOTAL MEMBROS",
	SUM(US.PAGINOMETRO) AS "TOTAL PÁGINAS LIDAS"
	
FROM
    MEMBROS ME
    JOIN USUARIOS US  ON  ME.CODUSUARIO = US.CODUSUARIO
    JOIN GRUPOS   GR  ON  ME.CODGRUPO = GR.CODGRUPO
	
GROUP BY
	GR.NOME
    HAVING AVG(PAGINOMETRO) >= 1000
   
   

-- 3) OS USUARIOS QUE ADICIONARAM EM SUAS ESTANTES LIVROS QUE FORAM PUBLICADOS PELA EDITORA ROCCO.
--	  MOSTRAR O NOME E CIDADE DO USUARIO; O NOME E AUTOR DO LIVRO:  
	   
SELECT
	U.NOME    AS "NOME USUARIO"
   ,U.CIDADE
   ,CP.TITULO AS "TITULO LIVRO"
   ,CP.NOME_AUTOR

FROM
	CATALOGO_PUB CP
	JOIN ESTANTES E ON CP.CODLIVRO = E.CODLIVRO
	JOIN USUARIOS U ON E.CODUSUARIO = U.CODUSUARIO
    
WHERE
	CP.NOME_EDITORA = 'ROCCO'
	  


-- 4) O HISTORICO DE LEITURA MAIS RECENTE DAS ESTANTES COM UM LIVRO DA SAGA "JOGOS VORAZES"
--    MOSTRAR TODAS AS INFO DO HISTORICO, O NOME DOS USUARIOS, O TÍTULO DO LIVRO E VOLUME DA SAGA:

SELECT
	 H.*
    ,U.NOME AS "NOME DO USUARIO"
	,L.TITULO AS "LIVRO"
    ,L.SUB_TITULO AS "VOLUME"

 FROM
    HISTORICOS H
    JOIN ESTANTES E  ON H.ESTANTE  = E.CODESTANTE
    JOIN USUARIOS U  ON E.CODUSUARIO = U.CODUSUARIO
    JOIN LIVROS   L  ON E.CODLIVRO = L.CODLIVRO
	
WHERE
	(L.SUB_TITULO) LIKE 'JOGOS VORAZES%' AND
     H.DATA_REGISTRO = (SELECT MAX(H1.DATA_REGISTRO) 
                        FROM HISTORICOS H1  
                        WHERE H1.ESTANTE = E.CODESTANTE )
	   


-- 5) TODAS AS MENSAGENS CRIADAS PELO USUARIO "GABRIEL BOHRER":
--    MOSTRAR A MENSAGEM E TIMESTAMP, O TITULO E TIMESTAMP DO TOPICO EM QUE FOI FEITA E O NOME DO GRUPO:

SELECT
    M.TEXTOMSG AS "MENSAGEM"
   ,M.CRIACAO AS "DATA DA MENSAGEM"
   ,P.TITULO AS "TOPICO"
   ,P.CRIACAO AS "DATA DO TOPICO"
   ,G.NOME AS "GRUPO"
   
FROM
	USUARIOS U
    JOIN MENSAGENS M ON U.CODUSUARIO = M.CODUSUARIO
    JOIN TOPICOS P   ON M.CODTOPICO  = P.CODTOPICO
    JOIN GRUPOS G    ON P.CODGRUPO = G.CODGRUPO
	
WHERE U.NOME = 'GABRIEL BOHRER';



-- 6) TODOS OS GENEROS COM AS QUANTIDADES DE LIVROS E AUTORES QUE SÃO IDENTIFICADOS POR ELES.
--    AGRUPAR POR GENERO (CATEGORIA), MOSTRANDO O NOME DO GENERO,O TOTAL DE LIVROS E AUTORES:

SELECT
    G.CATEGORIA
   ,COUNT(DISTINCT GL.CODLIVRO) AS "TOTAL DE LIVROS"
   ,COUNT(DISTINCT GA.CODAUTOR) AS "TOTAL DE AUTORES"

FROM
	GENEROSLIVRO GL
    JOIN LIVROS L        ON GL.CODLIVRO = L.CODLIVRO
    RIGHT JOIN GENEROS G ON G.CODGENERO = GL.CODGENERO
    JOIN GENEROSAUTOR GA ON G.CODGENERO = GA.CODGENERO
    JOIN AUTORES A       ON GA.CODAUTOR = A.CODAUTOR

GROUP  BY
    G.CATEGORIA

-- 7) QUANTIDADE DE USUARIOS QUE ADICIONARAM ÀS SUAS ESTANTES LIVROS DE "LITERATURA NACIONAL"
--    E QUE NÃO FORAM ESCRITOS PELO AUTOR "LEONEL CALDELA".
--    AGRUPAR POR LIVROS, MONSTRANDO SEU TITULO E AUTOR:

SELECT
    C.TITULO
   ,C.NOME_AUTOR
   ,COUNT(CODUSUARIO) AS "TOTAL DE ESTANTES"

FROM CATALOGO_PUB C
    JOIN GENEROSLIVRO GL ON C.CODLIVRO = GL.CODLIVRO
    JOIN GENEROS G       ON GL.CODGENERO = G.CODGENERO
    JOIN ESTANTES E      ON C.CODLIVRO = E.CODLIVRO

WHERE 
    CATEGORIA = 'LITERATURA NACIONAL' AND
    NOME_AUTOR <> 'LEONEL CALDELA'

GROUP BY 
    C.TITULO
   ,C.NOME_AUTOR

	

-- 8) GRUPOS COM A TAG "MAGIA" QUE POSSUEM PELO MENOS 3 MEMBROS.
--	  AGRUPAR POR GRUPOS, MOSTRANDO O CODIGO E O NOME DO GRUPO E O TOTAL DE MEMBROS:

SELECT
    G.CODGRUPO
   ,G.NOME AS "NOME DO GRUPO" 
   ,COUNT(M.CODUSUARIO) AS "TOTAL_MEMBROS"

FROM
	GRUPOS G
    JOIN MEMBROS M ON G.CODGRUPO = M.CODGRUPO
	JOIN GTAGS GT ON G.CODGRUPO = GT.GRUPO
    JOIN TAGS T   ON GT.TAG = T.CODTAG

WHERE
    T.PALAVRA = 'MAGIA'

GROUP BY
    G.CODGRUPO
   ,G.NOME
	HAVING COUNT(CODUSUARIO) > 3



-- 9) OS LIVROS QUE PARTICIPARAM DE UMA TROCA BEM SUCEDIDA (ACEITA)PELOS USUARIOS.
--	  MOSTRAR AS INFORMAÇÕES DA TROCA, O TITULO, AUTOR, EDITORA DO LIVRO E OS USUARIOS QUE ESTÃO NA TRANSAÇÃO:

SELECT 
    T.CODS AS "CODIGO TROCA"
   ,T.SITUACAO
   ,T.NRO_CREDITOS AS "CREDITOS DA TROCA"
   ,CP.TITULO AS "NOME DO LIVRO"
   ,CP.NOME_AUTOR
   ,CP.NOME_EDITORA
   ,U1.NOME AS "USUARIO REMETENTE"
   ,U2.NOME AS "USUARIO DESTINATARIO"

FROM
	TROCAS T
    JOIN USUARIOS U1     ON T.USUARIODONO = U1.CODUSUARIO
    JOIN USUARIOS U2     ON T.USUARIOSLC = U2.CODUSUARIO
    JOIN ESTANTES E      ON T.CODESTANTE = E.CODESTANTE
	JOIN CATALOGO_PUB CP ON E.CODLIVRO = CP.CODLIVRO

WHERE T.SITUACAO = 'ACEITA'



-- 10) TAGS QUE NÃO FORAM USADAS EM NENHUM GRUPO NOS QUAIS A TAG "MAGIA" FOI USADA.
-- MOSTRAR O CODIGO E A PALAVRA DA TAG:

SELECT
    T.CODTAG
    ,T.PALAVRA    

FROM
	TAGS T
	
WHERE
	T.PALAVRA <> 'MAGIA' AND
	NOT EXISTS (SELECT GT1.GRUPO
				FROM GTAGS GT1 JOIN TAGS T1 ON GT1.TAG = T1.CODTAG
				WHERE T1.PALAVRA = 'MAGIA' AND
					  GT1.GRUPO IN (SELECT DISTINCT GT2.GRUPO
								   FROM GTAGS GT2 JOIN TAGS T2 ON GT2.TAG = T2.CODTAG
								   WHERE T2.PALAVRA = T.PALAVRA))                                   
ORDER BY T.CODTAG



